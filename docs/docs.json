{
  "timestamp": "2023-09-04T19:47:38",
  "compiler": {
    "name": "@stencil/core",
    "version": "4.1.0",
    "typescriptVersion": "5.0.4"
  },
  "components": [
    {
      "filePath": "src/components/ini-alert/ini-alert.tsx",
      "encapsulation": "none",
      "tag": "ini-alert",
      "docs": "The Alert component serves as a dynamic container for conveying vital notifications and messages.\nDepending on the context, alerts can adopt various types such as Primary, Danger, Success, Warning, and other relevant variants. Each type visually signifies its importance and relevance.\nAdditionally, to enhance clarity and emphasis, alerts can be complemented with a title. For users desiring an uncluttered interface,\nthe alerts also offer a dismissible feature, enabling them to close the message after acknowledgment. Through all its configurations, the Alert component ensures that key communications remain prominent and clear.",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "dismissible",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "dismissible",
          "reflectToAttr": false,
          "docs": "Allows you to hide the alert if the close button is clicked",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "headerTitle",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "header-title",
          "reflectToAttr": false,
          "docs": "(optional) The title of the alert that accompanies the content",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "variant",
          "type": "\"danger\" | \"info\" | \"primary\" | \"secondary\" | \"success\" | \"warning\"",
          "complexType": {
            "original": "\"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\"",
            "resolved": "\"danger\" | \"info\" | \"primary\" | \"secondary\" | \"success\" | \"warning\"",
            "references": {}
          },
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "Context of the alert, if it is an error message: `danger`, an action which is successful: `success` ...",
          "docsTags": [],
          "default": "\"primary\"",
          "values": [
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "primary",
              "type": "string"
            },
            {
              "value": "secondary",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "src/components/ini-badge/ini-badge.tsx",
      "encapsulation": "none",
      "tag": "ini-badge",
      "docs": "The Badge component is a compact yet powerful means of showcasing status, highlighting states, or drawing attention to specific data points.\nWith its minimalist design, it effortlessly integrates into various UI contexts, making it a go-to for concise visual feedback",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "variant",
          "type": "\"danger\" | \"info\" | \"primary\" | \"secondary\" | \"success\" | \"warning\"",
          "complexType": {
            "original": "\"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\"",
            "resolved": "\"danger\" | \"info\" | \"primary\" | \"secondary\" | \"success\" | \"warning\"",
            "references": {}
          },
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "Variant color of badge",
          "docsTags": [],
          "default": "\"primary\"",
          "values": [
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "primary",
              "type": "string"
            },
            {
              "value": "secondary",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "src/components/ini-button/ini-button.tsx",
      "encapsulation": "none",
      "tag": "ini-button",
      "docs": "The Button component stands as an interactive gateway, inviting users to take action, navigate, or submit.\nWith its versatile design, it can signal importance, set priorities, or provide navigational cues.\nWhether beckoning a user to 'Learn More', confirming a choice with 'Submit', or pausing a task with 'Cancel', the Button ensures every interaction is clear and intentional.\n\n> When the `create` button is applied, then the `variant` and `outline` props no longer have priority",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "create",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "create",
          "reflectToAttr": false,
          "docs": "Apply the style of a create button",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disable button, user can't have any interaction",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "extraClass",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "extra-class",
          "reflectToAttr": false,
          "docs": "Additional CSS class to add to the `<button>` if necessary",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "outline",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "outline",
          "reflectToAttr": false,
          "docs": "Remove the background and highlight the borders",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"large\" | \"medium\" | \"small\"",
          "complexType": {
            "original": "\"small\" | \"medium\" | \"large\"",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Button size",
          "docsTags": [],
          "default": "\"medium\"",
          "values": [
            {
              "value": "large",
              "type": "string"
            },
            {
              "value": "medium",
              "type": "string"
            },
            {
              "value": "small",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "variant",
          "type": "\"danger\" | \"info\" | \"primary\" | \"secondary\" | \"success\" | \"warning\"",
          "complexType": {
            "original": "\"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\"",
            "resolved": "\"danger\" | \"info\" | \"primary\" | \"secondary\" | \"success\" | \"warning\"",
            "references": {}
          },
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "Color variants of button",
          "docsTags": [],
          "default": "\"primary\"",
          "values": [
            {
              "value": "danger",
              "type": "string"
            },
            {
              "value": "info",
              "type": "string"
            },
            {
              "value": "primary",
              "type": "string"
            },
            {
              "value": "secondary",
              "type": "string"
            },
            {
              "value": "success",
              "type": "string"
            },
            {
              "value": "warning",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "iniClick",
          "detail": "any",
          "bubbles": true,
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "cancelable": true,
          "composed": true,
          "docs": "When user click on button",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "ini-dropdown",
        "ini-modal"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "ini-dropdown": [
          "ini-button"
        ],
        "ini-modal": [
          "ini-button"
        ]
      }
    },
    {
      "filePath": "src/components/ini-card/ini-card.tsx",
      "encapsulation": "none",
      "tag": "ini-card",
      "docs": "The Card component acts as a versatile container, framing content with a clear visual boundary. Whether showcasing snippets of text,\nhosting other UI components, or spotlighting information with an optional title, the Card offers a neat and structured presentation.\nIt effectively organizes and emphasizes content, ensuring that information stands out in an engaging manner.",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "headerTitle",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "header-title",
          "reflectToAttr": false,
          "docs": "(Optional) the title of the card in the header",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "src/components/ini-choice/ini-choice.tsx",
      "encapsulation": "none",
      "tag": "ini-choice",
      "docs": "The Checkbox, Radio and Switch components serves as a versatile tool for capturing user choices. As a Checkbox/Switch it represents binary decisions or enables multi-select options.\nWhen set as a Radio, it facilitates single-choice selections among a group of options. Employed in forms and various UI contexts, their states—whether checked,\nunchecked, or indeterminate—are clearly conveyed. Paired with intuitive labels, this component ensures user selections are both clear and accurate,\nadapting seamlessly based on the specified type.",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "checked",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "checked",
          "reflectToAttr": false,
          "docs": "Is the component checked",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disable component, user can't have any interaction",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "groupId",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": true,
          "attr": "group-id",
          "reflectToAttr": false,
          "docs": "The id value for input and label attributes",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inline",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "inline",
          "reflectToAttr": false,
          "docs": "Group checkboxes or radios on the same horizontal row",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the checkbox/radio/switch in the form (example: for radios to create group)",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "\"checkbox\" | \"radio\" | \"switch\"",
          "complexType": {
            "original": "\"checkbox\" | \"radio\" | \"switch\"",
            "resolved": "\"checkbox\" | \"radio\" | \"switch\"",
            "references": {}
          },
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "The id value for input and label attributes",
          "docsTags": [],
          "default": "\"checkbox\"",
          "values": [
            {
              "value": "checkbox",
              "type": "string"
            },
            {
              "value": "radio",
              "type": "string"
            },
            {
              "value": "switch",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The default value of checkbox/radio/switch",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "src/components/ini-date-picker/ini-date-picker.tsx",
      "encapsulation": "none",
      "tag": "ini-date-picker",
      "docs": "The Date Picker component simplifies the task of selecting dates by providing a user-friendly interface.\nWhether setting an appointment, scheduling an event, or marking a milestone, it seamlessly integrates into forms and interfaces.\nWith intuitive navigation through days, months, and years, the Date Picker ensures that capturing a specific date or date range is both precise and effortless.\n\nDocumentation of used Datepicker : https://mymth.github.io/vanillajs-datepicker",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "dateFormat",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "date-format",
          "reflectToAttr": false,
          "docs": "The date format",
          "docsTags": [],
          "default": "\"dd/mm/yyyy\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disable input, user can't have any interaction",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helpText",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "help-text",
          "reflectToAttr": false,
          "docs": "A help message for the input",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The text label to display before input",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the input in the form",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "The placeholder",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The default date value",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "ini-input"
      ],
      "dependencyGraph": {
        "ini-date-picker": [
          "ini-input"
        ]
      }
    },
    {
      "filePath": "src/components/ini-date-range-picker/ini-date-range-picker.tsx",
      "encapsulation": "none",
      "tag": "ini-date-range-picker",
      "docs": "The Date Range Picker component streamlines the process of selecting a span of dates. Ideal for defining periods such as booking intervals,\nfinancial quarters, or event durations, it offers an intuitive interface to capture both start and end dates. Its user-centric design ensures\nthat selecting consecutive days or disparate intervals is straightforward, providing clarity and precision in every date range selection.\n\nDocumentation of used Datepicker : https://mymth.github.io/vanillajs-datepicker",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "dateFormat",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "date-format",
          "reflectToAttr": false,
          "docs": "The date format",
          "docsTags": [],
          "default": "\"dd/mm/yyyy\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disable input, user can't have any interaction",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "endName",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "end-name",
          "reflectToAttr": false,
          "docs": "The name of the *end date* input in the form",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "endPlaceholder",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "end-placeholder",
          "reflectToAttr": false,
          "docs": "The *end date* placeholder",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "endValue",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "end-value",
          "reflectToAttr": false,
          "docs": "The default *end date* value",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helpText",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "help-text",
          "reflectToAttr": false,
          "docs": "A help message for the input",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The text label to display before input",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "startName",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "start-name",
          "reflectToAttr": false,
          "docs": "The name of the *start date* input in the form",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "startPlaceholder",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "start-placeholder",
          "reflectToAttr": false,
          "docs": "The *start date* placeholder",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "startValue",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "start-value",
          "reflectToAttr": false,
          "docs": "The default *start date* value",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "ini-input"
      ],
      "dependencyGraph": {
        "ini-date-range-picker": [
          "ini-input"
        ]
      }
    },
    {
      "filePath": "src/components/ini-dropdown/ini-dropdown.tsx",
      "encapsulation": "none",
      "tag": "ini-dropdown",
      "docs": "The Dropdown component offers a compact way to present multiple options without overwhelming the interface.\nBy clicking or hovering, users can unveil a list of choices, making selections both space-efficient and user-friendly.\nWhether used for navigation, action lists, or form inputs, the Dropdown ensures a smooth experience, guiding users through their options with elegance and simplicity.\n\nThis component use the Popper library : https://popper.js.org/docs/v2/",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disable Dropdown trigger button, user can't have any interaction",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The label to display inside dropdown trigger button",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "outline",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "outline",
          "reflectToAttr": false,
          "docs": "Remove the background and highlight the borders",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placement",
          "type": "\"bottom\" | \"left\" | \"right\" | \"top\"",
          "complexType": {
            "original": "\"top\" | \"bottom\" | \"right\" | \"left\"",
            "resolved": "\"bottom\" | \"left\" | \"right\" | \"top\"",
            "references": {}
          },
          "mutable": false,
          "attr": "placement",
          "reflectToAttr": false,
          "docs": "The default location when opening the dropdown",
          "docsTags": [],
          "default": "\"bottom\"",
          "values": [
            {
              "value": "bottom",
              "type": "string"
            },
            {
              "value": "left",
              "type": "string"
            },
            {
              "value": "right",
              "type": "string"
            },
            {
              "value": "top",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"large\" | \"medium\" | \"small\"",
          "complexType": {
            "original": "\"small\" | \"medium\" | \"large\"",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "The Dropdown trigger button size",
          "docsTags": [],
          "default": "\"medium\"",
          "values": [
            {
              "value": "large",
              "type": "string"
            },
            {
              "value": "medium",
              "type": "string"
            },
            {
              "value": "small",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [
        {
          "event": "click",
          "target": "window",
          "capture": false,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "ini-button"
      ],
      "dependencyGraph": {
        "ini-dropdown": [
          "ini-button"
        ]
      }
    },
    {
      "filePath": "src/components/ini-input/ini-input.tsx",
      "encapsulation": "none",
      "tag": "ini-input",
      "docs": "Form Input components are the essential touchpoints of user data entry. From simple text fields capturing names to specialized inputs like emails or color pickers,\nthey transform user interactions into actionable data. Designed for clarity and ease of use, these components ensure that users effortlessly provide information,\nwhether its personal details, preferences, or any specific input. Every interaction is optimized for accuracy, ensuring data integrity across varied input types.",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disable input, user can't have any interaction",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "groupId",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": true,
          "attr": "group-id",
          "reflectToAttr": false,
          "docs": "The id value for input and label attributes",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helpText",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "help-text",
          "reflectToAttr": false,
          "docs": "A help message for the input",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "inline",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "inline",
          "reflectToAttr": false,
          "docs": "Show input and label on a single line",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The text label to display before input",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the input in the form",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "The placeholder",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "prefixIcon",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "prefix-icon",
          "reflectToAttr": false,
          "docs": "Icon to display as prefix of the input `example: fa-solid fa-user or zmdi-user...`",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "prefixText",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "prefix-text",
          "reflectToAttr": false,
          "docs": "Text to display as prefix of the input",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"large\" | \"medium\" | \"small\"",
          "complexType": {
            "original": "\"small\" | \"medium\" | \"large\"",
            "resolved": "\"large\" | \"medium\" | \"small\"",
            "references": {}
          },
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "The input size",
          "docsTags": [],
          "default": "\"medium\"",
          "values": [
            {
              "value": "large",
              "type": "string"
            },
            {
              "value": "medium",
              "type": "string"
            },
            {
              "value": "small",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "suffixIcon",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "suffix-icon",
          "reflectToAttr": false,
          "docs": "Icon to display as suffix of the input `example: fa-solid fa-user or zmdi-user...`",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "suffixText",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "suffix-text",
          "reflectToAttr": false,
          "docs": "Text to display as suffix of the input",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "type",
          "type": "\"color\" | \"email\" | \"file\" | \"number\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"textarea\" | \"url\"",
          "complexType": {
            "original": "\"text\" | \"password\" | \"email\" | \"number\" | \"search\" | \"tel\" | \"url\" | \"color\" | \"file\" | \"textarea\"",
            "resolved": "\"color\" | \"email\" | \"file\" | \"number\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"textarea\" | \"url\"",
            "references": {}
          },
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "The type of input in the form",
          "docsTags": [],
          "default": "\"text\"",
          "values": [
            {
              "value": "color",
              "type": "string"
            },
            {
              "value": "email",
              "type": "string"
            },
            {
              "value": "file",
              "type": "string"
            },
            {
              "value": "number",
              "type": "string"
            },
            {
              "value": "password",
              "type": "string"
            },
            {
              "value": "search",
              "type": "string"
            },
            {
              "value": "tel",
              "type": "string"
            },
            {
              "value": "text",
              "type": "string"
            },
            {
              "value": "textarea",
              "type": "string"
            },
            {
              "value": "url",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "The default value of input",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "getInputRef",
          "returns": {
            "type": "Promise<HTMLElement>",
            "docs": ""
          },
          "complexType": {
            "signature": "() => Promise<HTMLElement>",
            "parameters": [],
            "references": {
              "Promise": {
                "location": "global",
                "id": "global::Promise"
              },
              "HTMLElement": {
                "location": "global",
                "id": "global::HTMLElement"
              }
            },
            "return": "Promise<HTMLElement>"
          },
          "signature": "getInputRef() => Promise<HTMLElement>",
          "parameters": [],
          "docs": "",
          "docsTags": []
        }
      ],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [
        "ini-date-picker",
        "ini-date-range-picker"
      ],
      "dependencies": [],
      "dependencyGraph": {
        "ini-date-picker": [
          "ini-input"
        ],
        "ini-date-range-picker": [
          "ini-input"
        ]
      }
    },
    {
      "filePath": "src/components/ini-modal/ini-modal.tsx",
      "encapsulation": "none",
      "tag": "ini-modal",
      "docs": "The Modal component emerges as a focused overlay, capturing users' full attention to deliver essential content or actions.\nWhether presenting vital information, confirming user decisions, or offering supplemental details, the Modal provides an immersive environment, momentarily separating users from the main interface.\nIts distinct presence ensures that the information or actions within are both central and prioritized, facilitating focused interactions.",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "centerY",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "center-y",
          "reflectToAttr": false,
          "docs": "Center the modal vertically",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "closeLabel",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "close-label",
          "reflectToAttr": false,
          "docs": "The close button label",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "headerTitle",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "header-title",
          "reflectToAttr": false,
          "docs": "The title in the modal header",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "open",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": true,
          "attr": "open",
          "reflectToAttr": false,
          "docs": "Open or close the modal",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "submitLabel",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "submit-label",
          "reflectToAttr": false,
          "docs": "The submit button label",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "iniModalClosed",
          "detail": "any",
          "bubbles": true,
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "cancelable": true,
          "composed": true,
          "docs": "When user click on close button",
          "docsTags": []
        },
        {
          "event": "iniModalSubmitted",
          "detail": "any",
          "bubbles": true,
          "complexType": {
            "original": "any",
            "resolved": "any",
            "references": {}
          },
          "cancelable": true,
          "composed": true,
          "docs": "When user click on submit button",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [
        "ini-button"
      ],
      "dependencyGraph": {
        "ini-modal": [
          "ini-button"
        ]
      }
    },
    {
      "filePath": "src/components/ini-select/ini-select.tsx",
      "encapsulation": "none",
      "tag": "ini-select",
      "docs": "The Select control offers an intuitive way to present a list of options to users. It allows for easy single or multiple selections from a dropdown menu.\nAdditionally, some select controls provide the ability to search or type in text, offering users an even more streamlined experience.\nWhether you're choosing from a predefined list or inputting new information, the Select control is designed to handle both with efficiency.\nPlus, with built-in functions for adding or removing options, it ensures a dynamic user interaction that adapts to various needs.\n\nThis component use TomSelect library : https://tom-select.js.org/docs/",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "allowEmpty",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "allow-empty",
          "reflectToAttr": false,
          "docs": "May be empty",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disable select, user can't have any interaction",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "groupId",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": true,
          "attr": "group-id",
          "reflectToAttr": false,
          "docs": "The id value for select and label attributes",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "helpText",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "help-text",
          "reflectToAttr": false,
          "docs": "A help message for the select",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "The text label to display before select",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "multiple",
          "type": "boolean",
          "complexType": {
            "original": "boolean",
            "resolved": "boolean",
            "references": {}
          },
          "mutable": false,
          "attr": "multiple",
          "reflectToAttr": false,
          "docs": "Can have and select multiple values",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "The name of the select input in the form",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "The placeholder",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "selected",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "Pass the values selected by default (for multiple values must be used a delimiter between the values example: `apple,grape,orange`)",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "src/components/ini-tooltip/ini-tooltip.tsx",
      "encapsulation": "none",
      "tag": "ini-tooltip",
      "docs": "The Tooltip component acts as a brief informational aide, offering users additional context or guidance when they hover or focus on an element.\nSubtle yet informative, it unveils insights without disrupting the user flow. Whether elucidating an icon's function,\nproviding supplementary data, or explaining a term, the Tooltip ensures clarity is just a hover away.\n\n> The content which must display the tooltip when hovering must be wrapped by `<ini-tooltip>`, can be text, button, any other elements\n\nThis component use the Popper library : https://popper.js.org/docs/v2/",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "placement",
          "type": "\"bottom\" | \"left\" | \"right\" | \"top\"",
          "complexType": {
            "original": "\"top\" | \"bottom\" | \"right\" | \"left\"",
            "resolved": "\"bottom\" | \"left\" | \"right\" | \"top\"",
            "references": {}
          },
          "mutable": false,
          "attr": "placement",
          "reflectToAttr": false,
          "docs": "Where should the tooltip be displayed by bringing the element, if the tooltip leaves the parent container, then it will be replaced automatically",
          "docsTags": [],
          "default": "\"top\"",
          "values": [
            {
              "value": "bottom",
              "type": "string"
            },
            {
              "value": "left",
              "type": "string"
            },
            {
              "value": "right",
              "type": "string"
            },
            {
              "value": "top",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "titleContent",
          "type": "string",
          "complexType": {
            "original": "string",
            "resolved": "string",
            "references": {}
          },
          "mutable": false,
          "attr": "title-content",
          "reflectToAttr": false,
          "docs": "The content to display in the tooltip when hovering",
          "docsTags": [],
          "default": "\"\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    }
  ],
  "typeLibrary": {}
}