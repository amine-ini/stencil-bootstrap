/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface IniBadge {
        "variant": "primary" | "secondary" | "success" | "danger" | "warning" | "info";
    }
    interface IniButton {
        "disabled": boolean;
        "extraClass": string;
        "outline": boolean;
        "size": "small" | "medium" | "large";
        "variant": "primary" | "secondary" | "success" | "danger" | "warning" | "info";
    }
    interface IniCard {
        "headerTitle": string;
    }
    interface IniDropdown {
        "size": "small" | "medium" | "large";
    }
    interface IniModal {
        "closeLabel": string;
        "headerTitle": string;
        "open": boolean;
    }
}
export interface IniButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLIniButtonElement;
}
declare global {
    interface HTMLIniBadgeElement extends Components.IniBadge, HTMLStencilElement {
    }
    var HTMLIniBadgeElement: {
        prototype: HTMLIniBadgeElement;
        new (): HTMLIniBadgeElement;
    };
    interface HTMLIniButtonElement extends Components.IniButton, HTMLStencilElement {
    }
    var HTMLIniButtonElement: {
        prototype: HTMLIniButtonElement;
        new (): HTMLIniButtonElement;
    };
    interface HTMLIniCardElement extends Components.IniCard, HTMLStencilElement {
    }
    var HTMLIniCardElement: {
        prototype: HTMLIniCardElement;
        new (): HTMLIniCardElement;
    };
    interface HTMLIniDropdownElement extends Components.IniDropdown, HTMLStencilElement {
    }
    var HTMLIniDropdownElement: {
        prototype: HTMLIniDropdownElement;
        new (): HTMLIniDropdownElement;
    };
    interface HTMLIniModalElement extends Components.IniModal, HTMLStencilElement {
    }
    var HTMLIniModalElement: {
        prototype: HTMLIniModalElement;
        new (): HTMLIniModalElement;
    };
    interface HTMLElementTagNameMap {
        "ini-badge": HTMLIniBadgeElement;
        "ini-button": HTMLIniButtonElement;
        "ini-card": HTMLIniCardElement;
        "ini-dropdown": HTMLIniDropdownElement;
        "ini-modal": HTMLIniModalElement;
    }
}
declare namespace LocalJSX {
    interface IniBadge {
        "variant"?: "primary" | "secondary" | "success" | "danger" | "warning" | "info";
    }
    interface IniButton {
        "disabled"?: boolean;
        "extraClass"?: string;
        "onIniClick"?: (event: IniButtonCustomEvent<any>) => void;
        "outline"?: boolean;
        "size"?: "small" | "medium" | "large";
        "variant"?: "primary" | "secondary" | "success" | "danger" | "warning" | "info";
    }
    interface IniCard {
        "headerTitle"?: string;
    }
    interface IniDropdown {
        "size"?: "small" | "medium" | "large";
    }
    interface IniModal {
        "closeLabel"?: string;
        "headerTitle"?: string;
        "open"?: boolean;
    }
    interface IntrinsicElements {
        "ini-badge": IniBadge;
        "ini-button": IniButton;
        "ini-card": IniCard;
        "ini-dropdown": IniDropdown;
        "ini-modal": IniModal;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "ini-badge": LocalJSX.IniBadge & JSXBase.HTMLAttributes<HTMLIniBadgeElement>;
            "ini-button": LocalJSX.IniButton & JSXBase.HTMLAttributes<HTMLIniButtonElement>;
            "ini-card": LocalJSX.IniCard & JSXBase.HTMLAttributes<HTMLIniCardElement>;
            "ini-dropdown": LocalJSX.IniDropdown & JSXBase.HTMLAttributes<HTMLIniDropdownElement>;
            "ini-modal": LocalJSX.IniModal & JSXBase.HTMLAttributes<HTMLIniModalElement>;
        }
    }
}
